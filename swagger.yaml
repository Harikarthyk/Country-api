openapi: 3.0.0

info: 
  title: Country API 
  description: Country API helps in getting All Countries - Country code, Dial Code, Flag, Full Name.
  version: 1.0.0
  contact:
    email: harikarthyk1407@gmail.com
    url: https://harikarthyk.xyz

servers:
  - url: http://localhost:4000/api/{version}
    # description: Localhost version of our app for getting countries
    variables:
      version:
        enum:
          - v1
          - app
        default: v1
    

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: token
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT 


paths:
  
  /country/all:
    get: 
      security:
        - bearerAuth: []
      tags:
        - v1
      summary: get all countries details
      responses: 
        200: 
          description: return an json
          content: 
            application/json:
              schema: 
                type: object
                properties: 
                  success:
                    type: boolean
                    example: true
                  countries:
                    type: array
                    items: 
                      type: object
                      properties: 
                        name: 
                          type: string
                        dialCode: 
                          type: string
                        code: 
                          type: string
                        flag: 
                          type: string
                      example: {
                        dialCode: "+1",
                        flag: "ðŸ‡¨ðŸ‡¦",
                        code: "CA",
                        country: "Canada",
                      }
        403:
          description: Token Missing
          content: 
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error: 
                    type: string
                    example: Token is missing.
        400:
          description: Bad Request
          content: 
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error: 
                    type: string
                    example: error
        500:
          description: Internal server error
  
  /country/{countryCode}:
    get: 
      security:
        - bearerAuth: []
      tags:
        - v1
      summary: get country details by countryCode
      parameters:
        - name: countryCode
          in: path
          required: true
          schema: 
            type: string
      responses: 
        200: 
          description: returns an json
          content: 
            application/json:
              schema: 
                type: object
                properties: 
                  success:
                    type: boolean
                    example: true
                  country:
                    type: object
                    properties: 
                      name: 
                        type: string
                      dialCode: 
                        type: string
                      code: 
                        type: string
                      flag: 
                        type: string
                    example: {
                      dialCode: "+1",
                      flag: "ðŸ‡¨ðŸ‡¦",
                      code: "CA",
                      country: "Canada",
                    }
        400:
          description: Bad Request
          content: 
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error: 
                    type: string
                    example: error
        500:
          description: Internal server error  
        
  /country:
    get:
      security:
        - bearerAuth: []
      tags:
        - v1
      summary: get countries with pagination
      parameters:
        - name: limit
          in: query
          required: true
          schema: 
            type: number
            example: 1
        - name: page
          in: query
          required: true
          schema: 
            type: number
            example: 1
        
      responses:
        200:
          description: Successfully Fetched
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  countries:
                    type: array
                    items: 
                      type: object
                      properties: 
                        name: 
                          type: string
                        dialCode: 
                          type: string
                        code: 
                          type: string
                        flag: 
                          type: string
                      example: {
                        dialCode: "+1",
                        flag: "ðŸ‡¨ðŸ‡¦",
                        code: "CA",
                        country: "Canada",
                      }
        400:
          description: Bad Request
          content: 
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error: 
                    type: string
                    example: limit can't be 0
        500: 
          description: Internal Server Error

  /user/login:
    post:
      tags:
        - app
      summary: Login to our App
      requestBody:
        description: pass login credentials i.e email and password
        required: true
        content: 
          application/json:
            schema:
              type: object
              properties:
                email: 
                  type: string
                  example: example@gmail.com
                password: 
                  type: string
                  example: your_password
      responses:
        200:
          description: Successfully Logged In
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  user: 
                    type: object
                    properties: 
                      _id: 
                        type: string
                        example: "unique_id"
                      name: 
                        type: string
                        example: John
                      email:
                        type: string
                        example: example@gmail.com
                      isActive: 
                        type: boolean
                        example: true
                      createdAt:
                        type: string
                        example: "2021-11-14T15:15:36.895Z"
                      updatedAt:
                        type: string
                        example: "2021-11-14T15:15:36.895Z"
                      token:
                        type: string
                        example: "your_token"

        401:
          description: Invalid Credential passed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: email or password is incorrect.

        400:
          description: Bad Request
          content: 
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error: 
                    type: string
                    example: All fields are required.

        500: 
          description: Internal Server Error

  /user/register:
    post:
      tags:
        - app
      summary: Register new user to our app
      requestBody:
        description: pass credentials i.e name, email and password
        required: true
        content: 
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: John
                email: 
                  type: string
                  example: example@gmail.com
                password: 
                  type: string
                  example: your_password
      responses:
        200:
          description: Successfully Registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  user: 
                    type: object
                    properties: 
                      _id: 
                        type: string
                        example: "unique_id"
                      name: 
                        type: string
                        example: John
                      email:
                        type: string
                        example: example@gmail.com
                      isActive: 
                        type: boolean
                        example: true
                      createdAt:
                        type: string
                        example: "2021-11-14T15:15:36.895Z"
                      updatedAt:
                        type: string
                        example: "2021-11-14T15:15:36.895Z"
                      token:
                        type: string
                        example: "your_token"

        401:
          description: Invalid Credential passed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: User already exists..

        400:
          description: Bad Request
          content: 
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error: 
                    type: string
                    example: All fields are required.

        500: 
          description: Internal Server Error

  /key:
    get:
      security:
        - bearerAuth: []
        - cookieAuth: []
      tags:
        - app
      summary: get API Key
      responses:
        200:
          description: Successfully Fetched
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  API:
                    type: string
                    example: "api_token"
                  api: 
                    type: object
                    properties: 
                      _id: 
                        type: string
                        example: "unique_id"
                      user: 
                        type: string
                        example: "user_id"
                      isTrail:
                        type: boolean
                        example: true
                      isActive: 
                        type: boolean
                        example: true
                      createdAt:
                        type: string
                        example: "2021-11-14T15:15:36.895Z"
                      updatedAt:
                        type: string
                        example: "2021-11-14T15:15:36.895Z"
                
        400:
          description: Bad Request
          content: 
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error: 
                    type: string
                    example: Invalid Token
        500: 
          description: Internal Server Error

  /order/{apiId}/?plan={plan}:
    post:
      security:
        - bearerAuth: []
        - cookieAuth: []
      tags:
        - app
      summary: creating new orders - subscription API
      requestBody:
        description: pass order details
        required: true
        content: 
          application/json:
            schema:
              type: object
              properties:
                user: 
                  type: string
                  example: "user_id"
                api:
                  type: string
                  example: "api_id"
                orderId: 
                  type: string
                  example: 1001
                entity: 
                  type: string
                amount: 
                  type: Number,
                  example: 100
                amount_paid: 
                  type: Number,
                  example: 100
                currency: 
                  type: string,
                  example: INR,
                receipt:
                  type: String,
                  example: "#12021"
                status: 
                  type: String,
                  example: created
                created_at: 
                  type: String,
                  example: "new Date()"
      parameters:
        - name: apiId
          in: path
          required: true
          schema: 
            type: string
        - name: plan
          in: query
          required: true
          schema: 
            type: string
            enum: ["FREE", "PRO", "ULTRA", "MEGA"]
      responses:
        200: 
          description: creating order
          content: 
            application/json:
              schema:
                type: object
                properties:
                  user: 
                    type: string
                    example: "user_id"
                  api:
                    type: string
                    example: "api_id"
                  orderId: 
                    type: string
                    example: 1001
                  entity: 
                    type: string
                  amount: 
                    type: Number,
                    example: 100
                  amount_paid: 
                    type: Number,
                    example: 100
                  currency: 
                      type: string,
                      example: INR,
                  receipt:
                      type: String,
                      example: "#12021"
                  status: 
                      type: String,
                      example: created
                  created_at: 
                      type: String,
                      example:  "new Date()"
        400:
          description: Bad Request
          content: 
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error: 
                    type: string
                    example: Invalid apiId Passed.
        500:
          description: Internal server error  
      
      
          
          


    

    


        
